/**
 * SLCEE-2023-PC Arena
 * **SAP Labs CEE Hub Programming Competition 2023 Arena server**.  You can find more information about the game and the competititon rules at [github/SLCEE-2023-PC-public](https://github.com/afarago/SLCEE-2023-PC-public).   For a test run, you can use the crash test dummy user `000000000000000000000000/dummypass`.   *Note: All the APIs expect and return application/json*.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: DL SLCEE 2023 PC <DL_637A3F6466D808029A65636A@global.corp.sap>
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Card from './Card';

/**
 * The IStateDeltaStack model module.
 * @module model/IStateDeltaStack
 * @version 1.0.0
 */
class IStateDeltaStack {
    /**
     * Constructs a new <code>IStateDeltaStack</code>.
     * @alias module:model/IStateDeltaStack
     */
    constructor() { 
        
        IStateDeltaStack.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IStateDeltaStack</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IStateDeltaStack} obj Optional instance to populate.
     * @return {module:model/IStateDeltaStack} The populated <code>IStateDeltaStack</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IStateDeltaStack();

            if (data.hasOwnProperty('added')) {
                obj['added'] = ApiClient.convertToType(data['added'], [Card]);
            }
            if (data.hasOwnProperty('removed')) {
                obj['removed'] = ApiClient.convertToType(data['removed'], [Card]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IStateDeltaStack</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IStateDeltaStack</code>.
     */
    static validateJSON(data) {
        if (data['added']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['added'])) {
                throw new Error("Expected the field `added` to be an array in the JSON data but got " + data['added']);
            }
            // validate the optional field `added` (array)
            for (const item of data['added']) {
                Card.validateJsonObject(item);
            };
        }
        if (data['removed']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['removed'])) {
                throw new Error("Expected the field `removed` to be an array in the JSON data but got " + data['removed']);
            }
            // validate the optional field `removed` (array)
            for (const item of data['removed']) {
                Card.validateJsonObject(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/Card>} added
 */
IStateDeltaStack.prototype['added'] = undefined;

/**
 * @member {Array.<module:model/Card>} removed
 */
IStateDeltaStack.prototype['removed'] = undefined;






export default IStateDeltaStack;

