/**
 * SLCEE-2023-PC Arena
 * **SAP Labs CEE Hub Programming Competition 2023 Arena server**.  You can find more information about the game and the competititon rules at [github/SLCEE-2023-PC-public](https://github.com/afarago/SLCEE-2023-PC-public).   For a test run, you can use the crash test dummy user `000000000000000000000000/dummypass`.   *Note: All the APIs expect and return application/json*.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: DL SLCEE 2023 PC <DL_637A3F6466D808029A65636A@global.corp.sap>
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HelloWorldResponse from '../model/HelloWorldResponse';
import SessionData from '../model/SessionData';
import SessionUserData from '../model/SessionUserData';

/**
* Diagnostic service.
* @module api/DiagnosticApi
* @version 1.0.0
*/
export default class DiagnosticApi {

    /**
    * Constructs a new DiagnosticApi. 
    * @alias module:api/DiagnosticApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Returns authenticated User
     * Returns information on authenticated User
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SessionUserData} and HTTP response
     */
    getAuthenticatedUserWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basic'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SessionUserData;
      return this.apiClient.callApi(
        '/api/whoami', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns authenticated User
     * Returns information on authenticated User
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SessionUserData}
     */
    getAuthenticatedUser() {
      return this.getAuthenticatedUserWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Hello world ping message
     * Hello world ping message
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/HelloWorldResponse} and HTTP response
     */
    getMessageWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = HelloWorldResponse;
      return this.apiClient.callApi(
        '/api/hello', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Hello world ping message
     * Hello world ping message
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/HelloWorldResponse}
     */
    getMessage() {
      return this.getMessageWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns session information
     * Returns generic information on session
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SessionData} and HTTP response
     */
    getSessionInfoWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basic'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SessionData;
      return this.apiClient.callApi(
        '/api/sessioninfo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns session information
     * Returns generic information on session
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SessionData}
     */
    getSessionInfo() {
      return this.getSessionInfoWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
