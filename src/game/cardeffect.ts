import "core-js/es/array/at";
import {
  attribute,
  hashKey,
  autoGeneratedHashKey,
  rangeKey,
  table,
} from "@aws/dynamodb-data-mapper-annotations";
import { embed } from "@aws/dynamodb-data-mapper";

import MatchState from "./matchstate";
import Player, { PlayerId } from "./player";
import { Card } from "./model";

export class CardEffectBase {
    @attribute()
    readonly effectType: string; //!! //TODO: enum
  }
  export class CardEffectOracle extends CardEffectBase {
    @attribute()
    readonly effectType: string = "Oracle";
  
    @attribute()
    readonly card: Card;
  
    constructor(card: Card) {
      super();
      this.card = card;
    }
  }
  export class CardEffectHook extends CardEffectBase {
    @attribute()
    readonly effectType: string = "Hook";
  }
  export class CardEffectCannon extends CardEffectBase {
    @attribute()
    readonly effectType: string = "Cannon";
  }
  export class CardEffectSword extends CardEffectBase {
    @attribute()
    readonly effectType: string = "Sword";
  }
  export class CardEffectMap extends CardEffectBase {
    @attribute()
    readonly effectType: string = "Map";
  
    @attribute({ memberType: embed(Card) })
    readonly cards: Array<Card> = [];
  
    constructor(cards: Array<Card>) {
      super();
      this.cards = cards;
    }
  }
  