import "core-js/es/array/at";
import cloneDeep from "lodash/cloneDeep";
import {
  attribute,
  hashKey,
  autoGeneratedHashKey,
  rangeKey,
  table,
} from "@aws/dynamodb-data-mapper-annotations";
import { embed } from "@aws/dynamodb-data-mapper";

import * as model from "./model";
import { Bank, PlayArea, CardPile, CardEffect } from "./model";
import DrawCardPile from "./drawcardpile";
import Match from "./match";

/**
 * Match state associated with an atomic event
 */
export default class MatchState {
  @attribute({ memberType: embed(Bank), valueConstructor: Bank })
  banks: Array<Bank>;

  @attribute()
  playArea: PlayArea;

  @attribute()
  currentPlayerIndex: number;

  @attribute()
  drawPile: DrawCardPile;

  @attribute()
  discardPile: CardPile;

  @attribute()
  pendingEffect: CardEffect; //-- e.g. Kraken, Hook

  clearPendingEffect() {
    delete this.pendingEffect;
  }

  addPendingEffect(effect: CardEffect): void {
    if (this.pendingEffect) {
      throw new Error(
        "Effect already in action: " + this.pendingEffect.effectType + " - cannot add next one"
      );
    }

    this.pendingEffect = effect;
  }

  static clone(instance: MatchState) {
    //const source = structuredClone(this); // available in node 17, from LT update in 22'Oct
    //const copy = Object.create(Object.getPrototypeOf(source)) as MatchState;
    //const copy = utils.deepCopy<MatchState>(instance);
    const copy = cloneDeep(instance);
    return copy;
  }
}
